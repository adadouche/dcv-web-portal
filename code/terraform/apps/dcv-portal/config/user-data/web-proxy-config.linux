Content-Type: multipart/mixed; boundary="//"
MIME-Version: 1.0

--//
Content-Type: text/cloud-config; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="cloud-config.txt"

#cloud-config
cloud_final_modules:
- [scripts-user, always]

--//
Content-Type: text/x-shellscript; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="userdata.txt"
#!/bin/sh
export region=eu-west-1
export prefix=app-epv

log() {
    msg="[$(date '+%Y-%m-%d %H:%M:%S')] $1"
    echo "$msg"
    echo "$msg" >> ./setup-proxy.log
}

export AWS_STS_REGIONAL_ENDPOINTS=regional
export AWS_DEFAULT_REGION=$region

log "Calling STS regional endpoint = [$region]"

aws sts get-caller-identity >> ./setup-proxy.log 2>&1

log "Creating AWS Profile script = [/etc/profile.d/aws.sh]"

mkdir -p /etc/profile.d

cat <<EOF > /etc/profile.d/aws.sh
#!/bin/sh 
export AWS_STS_REGIONAL_ENDPOINTS=regional
export AWS_DEFAULT_REGION=${region}
EOF

log "Getting SSM Parameters..."

param_proxy_api_endpoint="/$prefix/proxy-api-endpoint"
param_proxy_web_content_bucket="/$prefix/proxy-web-content-bucket"

proxy_api_endpoint=$(aws ssm get-parameter --name "$param_proxy_api_endpoint" --query "Parameter.Value" --output text)
proxy_web_content_bucket=$(aws ssm get-parameter --name "$param_proxy_web_content_bucket" --query "Parameter.Value" --output text)

log "  [$param_proxy_api_endpoint] = [$proxy_api_endpoint]"
log "  [$param_proxy_web_content_bucket] = [$proxy_web_content_bucket]"

log "Downloading the web content from [$proxy_web_content_bucket] S3 bucket into [/usr/share/nginx/dcv]..."

mkdir -p /usr/share/nginx/dcv
rm -rf  /usr/share/nginx/dcv

aws s3 sync s3://$proxy_web_content_bucket /usr/share/nginx/dcv --delete

log "Configuring the NGinx Proxy Server..."

cp -n /etc/nginx/nginx.conf /etc/nginx/nginx.conf.bck

cat <<EOF > /etc/nginx/nginx.conf
# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80;
        listen       [::]:80;
        server_name  _;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        error_page 404 /404.html;
        location = /404.html {
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }

        location /api {
            proxy_set_header Host \$proxy_host;
            proxy_set_header X-Real-IP \$remote_addr;
            proxy_set_header X-Forwarded-Host \$host;
            proxy_set_header X-Forwarded-Server \$host;
            proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-User \$remote_user;

            proxy_set_header Authorization \$http_authorization;
            proxy_pass_header Authorization;

            proxy_pass $proxy_api_endpoint;               
            proxy_ssl_server_name on;
            proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
            proxy_buffering off;

            resolver 8.8.8.8;
        }

        location / {
            root /usr/share/nginx/dcv;
            index index.html;
            try_files index.html /index.html \$uri \$uri/;
        }
        location ~* \.(js|css)$ { 
            # Enable serving js and css files
            # Additional headers if needed
            root /usr/share/nginx/dcv;
            index index.html;
        }
    }
# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2;
#        listen       [::]:443 ssl http2;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers PROFILE=SYSTEM;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

}
EOF

more /etc/nginx/nginx.conf >> ./setup-proxy.log 2>&1

log "Restarting and Enabling the NGinx service..."

service nginx restart
service nginx status

--//